<Window
    x:Class="OpenSvip.GUI.MainWindow"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:local="clr-namespace:OpenSvip.GUI"
    xmlns:sys="clr-namespace:System;assembly=mscorlib"
    xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
    mc:Ignorable="d"
    Title="OpenSVIP - 歌声合成工程文件转换器（预览版本）"
    Height="800"
    Width="1200"
    MinHeight="510"
    MinWidth="985"
    Closing="Window_Closing">
    <Window.DataContext>
        <local:AppModel/>
    </Window.DataContext>
    <Window.Resources>
        <Style x:Key="PluginComboBox" TargetType="ComboBox" BasedOn="{StaticResource MaterialDesignOutlinedComboBox}">
            <Setter Property="Height" Value="45"/>
            <Setter Property="FontSize" Value="14"/>
            <Setter Property="materialDesign:HintAssist.HintOpacity" Value="0.8"/>
        </Style>
    </Window.Resources>
    <materialDesign:DialogHost Identifier="RootDialogHost">
        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition Height="25"/>
                <RowDefinition/>
            </Grid.RowDefinitions>
            <Border Grid.Row="0" Background="WhiteSmoke">
                <Border.Resources>
                    <x:Array x:Key="DefaultExportEnumValues" Type="local:DefaultExport">
                        <local:DefaultExport>None</local:DefaultExport>
                        <local:DefaultExport>Source</local:DefaultExport>
                        <local:DefaultExport>Desktop</local:DefaultExport>
                        <local:DefaultExport>Custom</local:DefaultExport>
                    </x:Array>
                </Border.Resources>
                <ComboBox
                    x:Name="HiddenDefaultExportComboBox"
                    Visibility="Hidden"
                    Height="0"
                    Width="0"
                    ItemsSource="{StaticResource DefaultExportEnumValues}"
                    SelectedIndex="{Binding DefaultExportPath, Converter={StaticResource IndexToEnumValueConverter}, ConverterParameter={x:Type local:DefaultExport}}"/>
            </Border>
            <DockPanel x:Name="MenuPanel" Grid.Row="0">
                <Menu IsMainMenu="True" Margin="20 0 0 0" Height="25" FontFamily="Microsoft YaHei UI" FontSize="13" FontWeight="Normal">
                    <Menu.Resources>
                        <Style TargetType="MenuItem" BasedOn="{StaticResource MaterialDesignMenuItem}">
                            <Setter Property="Height" Value="30"/>
                        </Style>
                    </Menu.Resources>
                    <MenuItem Header="文件(F)" Height="25" Padding="10 0">
                        <MenuItem
                            Header="导入文件..."
                            InputGestureText="Ctrl+I"
                            Icon="{materialDesign:PackIcon Kind=TrayArrowDown, Size=17}"
                            IsEnabled="{Binding ExecutionInProgress, Converter={StaticResource InvertBooleanConverter}}"
                            Click="FileMaskPanel_Click">
                        </MenuItem>
                        <MenuItem Header="导出文件" Icon="{materialDesign:PackIcon Kind=TrayArrowUp, Size=17}">
                            <MenuItem
                                Header="立即开始转换"
                                InputGestureText="Ctrl+E"
                                IsEnabled="{Binding IsEnabled, ElementName=StartExecutionButton}"
                                Click="StartExecutionButton_Click"/>
                            <MenuItem
                                Header="选择输出路径..."
                                InputGestureText="Ctrl+Shift+E"
                                Click="BrowseAndExportMenu_Click"/>
                        </MenuItem>
                        <MenuItem Header="重置列表" Icon="{materialDesign:PackIcon Kind=Autorenew, Size=17}" InputGestureText="Ctrl+R"/>
                    </MenuItem>
                    <MenuItem Header="设置(O)" Height="25" Padding="10 0">
                        <MenuItem Header="{Binding Text, ElementName=AutoDetectText}" IsCheckable="True" IsChecked="{Binding IsChecked, ElementName=AutoDetectToggle}"/>
                        <MenuItem Header="{Binding Text, ElementName=AutoResetText}" IsCheckable="True" IsChecked="{Binding IsChecked, ElementName=AutoResetToggle}"/>
                        <MenuItem Header="{Binding Text, ElementName=AutoExtensionText}" IsCheckable="True" IsChecked="{Binding IsChecked, ElementName=AutoExtensionToggle}"/>
                        <MenuItem Header="默认输出路径">
                            <MenuItem Header="无" Margin="-10 0 -5 0" IsCheckable="True"
                                      IsChecked="{Binding SelectedIndex, ElementName=HiddenDefaultExportComboBox, Converter={StaticResource IntegerConstantEqualsConverter}, ConverterParameter=0}"
                                      IsEnabled="{Binding ExecutionInProgress, Converter={StaticResource InvertBooleanConverter}}"/>
                            <MenuItem x:Name="ExportToSourceMenuItem" Header="源路径" Margin="-10 0 -5 0" IsCheckable="True"
                                      IsChecked="{Binding SelectedIndex, ElementName=HiddenDefaultExportComboBox, Converter={StaticResource IntegerConstantEqualsConverter}, ConverterParameter=1}"
                                      IsEnabled="{Binding ExecutionInProgress, Converter={StaticResource InvertBooleanConverter}}"/>
                            <MenuItem Header="桌面" Margin="-10 0 -5 0" IsCheckable="True"
                                      IsChecked="{Binding SelectedIndex, ElementName=HiddenDefaultExportComboBox, Converter={StaticResource IntegerConstantEqualsConverter}, ConverterParameter=2}"
                                      IsEnabled="{Binding ExecutionInProgress, Converter={StaticResource InvertBooleanConverter}}"/>
                            <MenuItem Header="自定义..." Margin="-10 0 -5 0" IsCheckable="True"
                                      IsChecked="{Binding SelectedIndex, ElementName=HiddenDefaultExportComboBox, Converter={StaticResource IntegerConstantEqualsConverter}, ConverterParameter=3}"
                                      IsEnabled="False"/>
                                      <!--IsEnabled="{Binding CustomExportPaths, Converter={StaticResource EnumerableIsNotEmptyConverter}, Mode=OneWay}"-->
                        </MenuItem>
                        <MenuItem Header="{Binding Text, ElementName=OpenExportFolderText}" IsCheckable="True" IsChecked="{Binding IsChecked, ElementName=OpenExportFolderToggle}"/>
                        <MenuItem Header="{Binding Text, ElementName=OverwriteOptionText}" HorizontalContentAlignment="Stretch">
                            <MenuItem Header="覆盖" Margin="-10 0 -5 0" IsCheckable="True"
                                      IsChecked="{Binding SelectedIndex, ElementName=OverwriteOptionComboBox, Converter={StaticResource IntegerConstantEqualsConverter}, ConverterParameter=0}"/>
                            <MenuItem Header="跳过" Margin="-10 0 -5 0" IsCheckable="True"
                                      IsChecked="{Binding SelectedIndex, ElementName=OverwriteOptionComboBox, Converter={StaticResource IntegerConstantEqualsConverter}, ConverterParameter=1}"/>
                            <MenuItem Header="询问" Margin="-10 0 -5 0" IsCheckable="True"
                                      IsChecked="{Binding SelectedIndex, ElementName=OverwriteOptionComboBox, Converter={StaticResource IntegerConstantEqualsConverter}, ConverterParameter=2}"/>
                        </MenuItem>
                        <Separator/>
                        <MenuItem Header="外观主题" IsEnabled="False">
                            <MenuItem Header="浅色" Margin="-10 0 -5 0" IsCheckable="True" IsChecked="True"/>
                            <MenuItem Header="深色" Margin="-10 0 -5 0" IsCheckable="True" IsChecked="False"/>
                            <MenuItem Header="系统" Margin="-10 0 -5 0" IsCheckable="True" IsChecked="False"/>
                        </MenuItem>
                    </MenuItem>
                    <MenuItem Header="帮助(H)" Height="25" Padding="10 0">
                        <MenuItem Header="在线用户手册" IsEnabled="False" Icon="{materialDesign:PackIcon Kind=TextBoxSearchOutline}" InputGestureText="Ctrl+H"/>
                        <MenuItem Header="关于 OpenSVIP..." Icon="{materialDesign:PackIcon Kind=InformationOutline}" InputGestureText="Ctrl+A" Click="AboutMenuItem_Click"/>
                    </MenuItem>
                </Menu>
            </DockPanel>
            <Grid Grid.Row="1">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition/>
                    <ColumnDefinition MinWidth="550"/>
                </Grid.ColumnDefinitions>

                <Grid Grid.Column="0">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition/>
                    </Grid.RowDefinitions>
                    <materialDesign:Card
                        x:Name="PluginSelectionCard"
                        Grid.Row="0"
                        Margin="20 20 10 10"
                        Padding="0 0 0 5">
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="35"/>
                                <RowDefinition/>
                                <RowDefinition/>
                            </Grid.RowDefinitions>
                            <TextBlock Grid.Row="0" VerticalAlignment="Bottom" HorizontalAlignment="Left" Margin="15 0" Text="格式选择" FontSize="20"/>
                            <StackPanel x:Name="ImportPluginPanel" Grid.Row="1">
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition/>
                                        <ColumnDefinition Width="70"/>
                                    </Grid.ColumnDefinitions>
                                    <Grid.RowDefinitions>
                                        <RowDefinition/>
                                        <RowDefinition Height="25"/>
                                    </Grid.RowDefinitions>
                                    <ComboBox
                                        x:Name="ImportPluginComboBox"
                                        Grid.Column="0"
                                        HorizontalAlignment="Stretch"
                                        Padding="16 5"
                                        Margin="15 0 0 0"
                                        Style="{StaticResource PluginComboBox}"
                                        materialDesign:HintAssist.Hint="导入工程格式"
                                        VerticalContentAlignment="Center"
                                        IsEnabled="{Binding ExecutionInProgress, Converter={StaticResource InvertBooleanConverter}}"
                                        SelectedIndex="{Binding SelectedInputPluginIndex}"
                                        SelectionChanged="ImportPluginComboBox_SelectionChanged">
                                    </ComboBox>
                                    <materialDesign:PopupBox
                                        Grid.Column="1"
                                        Margin="10 10 0 8"
                                        Grid.Row="0"
                                        PlacementMode="BottomAndAlignCentres"
                                        StaysOpen="True"
                                        ToolTip="查看详细信息"
                                        IsEnabled="{Binding SelectedIndex, ElementName=ImportPluginComboBox, Converter={StaticResource IndexToBooleanConverter}}"
                                        UnfurlOrientation="Horizontal"
                                        Cursor="Hand">
                                        <materialDesign:PopupBox.ToggleContent>
                                            <Grid>
                                                <Rectangle Margin="0 -1 0 1" Width="45" Height="45" StrokeThickness="1" RadiusX="4" RadiusY="4" Stroke="#424242"/>
                                                <materialDesign:PackIcon Kind="InformationOutline" HorizontalAlignment="Center" VerticalAlignment="Center" Width="20" Height="20" Foreground="#424242"/>
                                            </Grid>
                                        </materialDesign:PopupBox.ToggleContent>
                                        <local:PluginDetailsBoard DataContext="{Binding SelectedInputPlugin, Mode=OneWay}"/>
                                    </materialDesign:PopupBox>
                                    <StackPanel Grid.Row="1" Grid.Column="0" Grid.ColumnSpan="2" Margin="7 -8 0 0" Orientation="Horizontal">
                                        <StackPanel Margin="10 0 10 0" Orientation="Horizontal">
                                            <ToggleButton
                                                x:Name="AutoDetectToggle"
                                                VerticalAlignment="Center"
                                                Style="{StaticResource MaterialDesignSwitchToggleButton}"
                                                Width="40"
                                                Height="20"
                                                Cursor="Hand"
                                                IsChecked="{Binding AutoDetectFormat}"/>
                                            <TextBlock x:Name="AutoDetectText" VerticalAlignment="Center" Margin="5" Text="自动检测导入格式" FontSize="14" Opacity="0.8"/>
                                        </StackPanel>
                                        <StackPanel Margin="10 0 10 0" Orientation="Horizontal">
                                            <ToggleButton
                                                x:Name="AutoResetToggle"
                                                VerticalAlignment="Center"
                                                Style="{StaticResource MaterialDesignSwitchToggleButton}"
                                                Width="40"
                                                Height="20"
                                                Cursor="Hand"
                                                IsChecked="{Binding AutoResetTasks}"/>
                                            <TextBlock x:Name="AutoResetText" VerticalAlignment="Center" Margin="5" Text="切换格式时重置列表" FontSize="14" Opacity="0.8"/>
                                        </StackPanel>
                                    </StackPanel>
                                </Grid>
                            </StackPanel>

                            <StackPanel x:Name="ExportPluginPanel" Grid.Row="2">
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition/>
                                        <ColumnDefinition Width="70"/>
                                    </Grid.ColumnDefinitions>
                                    <Grid.RowDefinitions>
                                        <RowDefinition/>
                                        <RowDefinition Height="25"/>
                                    </Grid.RowDefinitions>
                                    <ComboBox
                                        x:Name="ExportPluginComboBox"
                                        Grid.Row="0"
                                        Grid.Column="0"
                                        HorizontalAlignment="Stretch"
                                        Margin="15 0 0 0"
                                        Padding="16 5"
                                        Style="{StaticResource PluginComboBox}"
                                        materialDesign:HintAssist.Hint="导出工程格式"
                                        VerticalContentAlignment="Center"
                                        IsEnabled="{Binding ExecutionInProgress, Converter={StaticResource InvertBooleanConverter}}"
                                        SelectedIndex="{Binding SelectedOutputPluginIndex}"
                                        SelectionChanged="ExportPluginComboBox_SelectionChanged"/>
                                    <materialDesign:PopupBox
                                        Grid.Row="0"
                                        Grid.Column="1"
                                        Margin="10 10 0 8"
                                        PlacementMode="BottomAndAlignCentres"
                                        StaysOpen="True"
                                        ToolTip="查看详细信息"
                                        IsEnabled="{Binding SelectedIndex, ElementName=ExportPluginComboBox, Converter={StaticResource IndexToBooleanConverter}}"
                                        UnfurlOrientation="Horizontal"
                                        Cursor="Hand">
                                        <materialDesign:PopupBox.ToggleContent>
                                            <Grid>
                                                <Rectangle Margin="0 -1 0 1" Width="45" Height="45" StrokeThickness="1" RadiusX="4" RadiusY="4" Stroke="#424242"/>
                                                <materialDesign:PackIcon Kind="InformationOutline" HorizontalAlignment="Center" VerticalAlignment="Center" Width="20" Height="20" Foreground="#424242"/>
                                            </Grid>
                                        </materialDesign:PopupBox.ToggleContent>
                                        <local:PluginDetailsBoard DataContext="{Binding SelectedOutputPlugin, Mode=OneWay}"/>
                                    </materialDesign:PopupBox>
                                    <StackPanel Grid.Row="1" Grid.Column="0" Grid.ColumnSpan="2" Margin="7 -8 0 0" Orientation="Horizontal">
                                        <StackPanel Margin="10 0 10 0" Orientation="Horizontal">
                                            <ToggleButton
                                                x:Name="AutoExtensionToggle"
                                                VerticalAlignment="Center"
                                                Style="{StaticResource MaterialDesignSwitchToggleButton}"
                                                Width="40"
                                                Height="20"
                                                Cursor="Hand"
                                                IsChecked="{Binding AutoExtension}"/>
                                            <TextBlock x:Name="AutoExtensionText" VerticalAlignment="Center" Margin="5" Text="自动设置后缀名" FontSize="14" Foreground="DimGray"/>
                                        </StackPanel>

                                    </StackPanel>
                                </Grid>
                            </StackPanel>

                        </Grid>
                    </materialDesign:Card>

                    <materialDesign:Card
                        x:Name="ConverterTaskCard"
                        Grid.Row="2"
                        Margin="20 10 10 20">
                        <Grid>
                            <DockPanel x:Name="FileDropPanel" Visibility="{Binding Visibility, ElementName=TaskListView, Converter={StaticResource ReversedVisibilityConverter}}">
                                <Grid>
                                    <StackPanel
                                        x:Name="FileDropAndClickMaskPanel"
                                        Background="Black"
                                        Opacity="0"
                                        Panel.ZIndex="16"
                                        AllowDrop="True"
                                        Cursor="Hand"
                                        MouseEnter="FileMaskPanel_Focus"
                                        MouseLeave="FileMaskPanel_UnFocus"
                                        MouseDown="FileMaskPanel_Click"
                                        Drop="FileMaskPanel_Drop"
                                        DragEnter="FileMaskPanel_Focus"
                                        DragLeave="FileMaskPanel_UnFocus"/>
                                    <DockPanel Height="240" VerticalAlignment="Center" HorizontalAlignment="Stretch">
                                        <materialDesign:PackIcon
                                            x:Name="FileDropIcon"
                                            DockPanel.Dock="Top"
                                            Kind="TrayArrowDown"
                                            Margin="0 50 0 0"
                                            HorizontalAlignment="Center"
                                            Width="100"
                                            Height="100"
                                            Opacity="0.4"
                                            Foreground="#01579b"/>
                                        <TextBlock
                                            x:Name="FileDropText"
                                            DockPanel.Dock="Bottom"
                                            Text="拖拽或单击导入文件"
                                            HorizontalAlignment="Center"
                                            FontSize="25"
                                            Opacity="{Binding Opacity, ElementName=FileDropIcon}"
                                            Foreground="#01579b"/>
                                    </DockPanel>
                                    <Rectangle
                                        x:Name="FileDropRectangle"
                                        Margin="10 10 10 10"
                                        Stroke="#01579b"
                                        Opacity="{Binding Opacity, ElementName=FileDropIcon}"
                                        StrokeThickness="3"
                                        StrokeLineJoin="Round"
                                        RadiusX="5"
                                        RadiusY="5"
                                        StrokeEndLineCap="Round"
                                        StrokeStartLineCap="Round"
                                        StrokeDashArray="5 3"/>
                                </Grid>
                            </DockPanel>
                            <DockPanel x:Name="TaskListPanel" Visibility="{Binding Visibility, ElementName=TaskListView}">
                                <Grid>
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="35"/>
                                        <RowDefinition/>
                                        <RowDefinition Height="55"/>
                                    </Grid.RowDefinitions>
                                    <TextBlock VerticalAlignment="Bottom" HorizontalAlignment="Left" Margin="15 0" Text="任务列表" FontSize="20"/>
                                    <ScrollViewer
                                        Grid.Row="1"
                                        Margin="7 5 12 0"
                                        VerticalScrollBarVisibility="Auto"
                                        PanningMode="VerticalOnly"
                                        AllowDrop="True"
                                        Drop="FileMaskPanel_Drop"
                                        DragEnter="FileMaskPanel_Focus"
                                        DragLeave="FileMaskPanel_UnFocus">
                                        <ItemsControl
                                            x:Name="TaskListView"
                                            Margin="6 5 -5 5"
                                            ItemsSource="{Binding TaskList}"
                                            Visibility="{Binding HasItems, ElementName=TaskListView, Converter={StaticResource BooleanToVisibilityConverter}}"
                                            IsEnabled="{Binding ExecutionInProgress, Converter={StaticResource InvertBooleanConverter}}"
                                            Grid.IsSharedSizeScope="True">
                                            <ItemsControl.ItemTemplate>
                                                <DataTemplate DataType="{x:Type local:TaskViewModel}">
                                                    <local:TaskListViewItem/>
                                                </DataTemplate>
                                            </ItemsControl.ItemTemplate>
                                        </ItemsControl>
                                    </ScrollViewer>
                                    <materialDesign:PopupBox
                                        Grid.Row="2"
                                        HorizontalAlignment="Left"
                                        Margin="12 0"
                                        Width="40"
                                        Height="40"
                                        Style="{StaticResource MaterialDesignMultiFloatingActionPopupBox}"
                                        Visibility="{Binding HasItems, ElementName=TaskListView, Converter={StaticResource BooleanToVisibilityConverter}}"
                                        PopupMode="MouseOver"
                                        PlacementMode="RightAndAlignMiddles"
                                        UnfurlOrientation="Horizontal"
                                        ToolTip="操作"
                                        IsEnabled="{Binding ExecutionInProgress, Converter={StaticResource InvertBooleanConverter}}">
                                        <materialDesign:PopupBox.ToggleContent>
                                            <materialDesign:PackIcon Kind="Tools" Width="20" Height="20"/>
                                        </materialDesign:PopupBox.ToggleContent>
                                        <StackPanel Orientation="Horizontal">
                                            <Button
                                                x:Name="AppendTasksButton"
                                                Margin="5 0"
                                                Style="{StaticResource MaterialDesignFloatingActionMiniLightButton}"
                                                ToolTip="继续添加文件"
                                                Click="FileMaskPanel_Click">
                                                <materialDesign:PackIcon Kind="Add"/>
                                            </Button>
                                            <Button
                                                x:Name="ClearTasksButton"
                                                Margin="5 0"
                                                Style="{StaticResource MaterialDesignFloatingActionMiniLightButton}"
                                                ToolTip="清空所有导入"
                                                Click="ClearTasksButton_Click">
                                                <materialDesign:PackIcon Kind="Refresh"/>
                                            </Button>
                                            <Button
                                                x:Name="RestoreTasksButton"
                                                Margin="5 0"
                                                Style="{StaticResource MaterialDesignFloatingActionMiniLightButton}"
                                                ToolTip="恢复默认命名"
                                                Click="RestoreTasksButton_Click">
                                                <materialDesign:PackIcon Kind="FormTextbox"/>
                                            </Button>
                                            <Button
                                                x:Name="FilterTasksButton"
                                                Margin="5 0"
                                                Style="{StaticResource MaterialDesignFloatingActionMiniLightButton}"
                                                ToolTip="过滤多余项目"
                                                Click="FilterTasksButton_Click">
                                                <materialDesign:PackIcon Kind="FilterMinusOutline"/>
                                            </Button>
                                        </StackPanel>
                                    </materialDesign:PopupBox>
                                </Grid>
                            </DockPanel>
                        </Grid>
                    </materialDesign:Card>
                </Grid>

                <Grid Grid.Column="1">
                    <Grid.RowDefinitions>
                        <RowDefinition/>
                        <RowDefinition Height="Auto"/>
                    </Grid.RowDefinitions>
                    <materialDesign:Card
                        x:Name="ConverterOptionsCard"
                        Grid.Row="0"
                        Margin="10 20 20 10">
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="35"/>
                                <RowDefinition/>
                            </Grid.RowDefinitions>
                            <TextBlock Grid.Row="0" VerticalAlignment="Bottom" HorizontalAlignment="Left" Margin="15 0" Text="高级选项" FontSize="20"/>
                            <ScrollViewer
                                x:Name="OptionScrollViewer"
                                Grid.Row="1"
                                Margin="5 10 12 20"
                                PanningMode="VerticalOnly"
                                VerticalScrollBarVisibility="Auto"
                                PreviewMouseWheel="OptionScrollViewer_MouseWheel"
                                PreviewTouchMove="OptionScrollViewer_TouchMove">
                                <StackPanel x:Name="OptionsPanel" CanVerticallyScroll="True">
                                    <StackPanel.Visibility>
                                        <MultiBinding Converter="{StaticResource AnyTrueAsVisibleConverter}">
                                            <Binding ElementName="InputOptionsTreeView" Path="HasItems"/>
                                            <Binding ElementName="OutputOptionsTreeView" Path="HasItems"/>
                                        </MultiBinding>
                                    </StackPanel.Visibility>
                                    <StackPanel.Resources>
                                        <Style TargetType="TreeView" BasedOn="{StaticResource MaterialDesignTreeView}">
                                            <Setter Property="ScrollViewer.PanningMode" Value="None"/>
                                            <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Disabled"/>
                                            <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Disabled"/>
                                            <EventSetter Event="PreviewMouseWheel" Handler="OptionTreeView_MouseWheel"/>
                                            <EventSetter Event="PreviewTouchMove" Handler="OptionTreeView_TouchMove"/>
                                        </Style>
                                        <Style TargetType="TreeViewItem" BasedOn="{StaticResource MaterialDesignTreeViewItem}">
                                            <Setter Property="IsExpanded" Value="True"/>
                                            <Setter Property="materialDesign:TreeViewAssist.ShowSelection" Value="False"/>
                                            <Setter Property="materialDesign:TreeViewAssist.ExpanderSize" Value="20"/>
                                        </Style>
                                        <DataTemplate x:Key="OptionsTreeViewItemTemplate">
                                            <Grid>
                                                <Grid.RowDefinitions>
                                                    <RowDefinition Height="Auto"/>
                                                    <RowDefinition/>
                                                </Grid.RowDefinitions>
                                                <materialDesign:PackIcon
                                                    Grid.Row="0"
                                                    Kind="TuneVariant"
                                                    VerticalAlignment="Center"
                                                    HorizontalAlignment="Left"
                                                    Margin="0 0 0 10"
                                                    Opacity="0.8"/>
                                                <Separator Grid.Row="0" Margin="20 0 0 10" VerticalAlignment="Center" Opacity="0.6"/>
                                                <StackPanel
                                                    Grid.Row="1"
                                                    Orientation="Horizontal"
                                                    Width="{Binding ActualWidth, ElementName=ConverterOptionsCard, Converter={StaticResource DoubleConstantSubConverter}, ConverterParameter=80}">
                                                    <local:OptionTreeViewItem DataContext="{Binding}" VerticalAlignment="Center" HorizontalAlignment="Stretch"/>
                                                </StackPanel>
                                            </Grid>
                                        </DataTemplate>
                                    </StackPanel.Resources>
                                    <TreeView
                                        Height="{Binding HasItems, ElementName=InputOptionsTreeView, Converter={StaticResource BooleanSwitchOperationConverter}, ConverterParameter=Auto;0}"
                                        Visibility="{Binding HasItems, ElementName=InputOptionsTreeView, Converter={StaticResource BooleanToVisibilityConverter}}">
                                        <TreeViewItem
                                            x:Name="InputOptionsTreeView"
                                            ItemsSource="{Binding SelectedInputOptions}">
                                            <TreeViewItem.Header>
                                                <TextBlock
                                                    Margin="-8 0 0 0"
                                                    Text="输入选项"
                                                    FontSize="16"
                                                    ToolTip="{Binding IsExpanded, ElementName=InputOptionsTreeView, Converter={StaticResource BooleanSwitchOperationConverter}, ConverterParameter=点击收起;点击展开}"
                                                    MouseDown="TreeViewHeader_Click"/>
                                            </TreeViewItem.Header>
                                            <TreeViewItem.ItemTemplate>
                                                <StaticResource ResourceKey="OptionsTreeViewItemTemplate"/>
                                            </TreeViewItem.ItemTemplate>
                                        </TreeViewItem>
                                    </TreeView>
                                    <TreeView
                                        Height="{Binding HasItems, ElementName=OutputOptionsTreeView, Converter={StaticResource BooleanSwitchOperationConverter}, ConverterParameter=Auto;0}"
                                        Visibility="{Binding HasItems, ElementName=OutputOptionsTreeView, Converter={StaticResource BooleanToVisibilityConverter}}">
                                        <TreeViewItem
                                            x:Name="OutputOptionsTreeView"
                                            ItemsSource="{Binding SelectedOutputOptions}">
                                            <TreeViewItem.Header>
                                                <TextBlock
                                                    Margin="-8 0 0 0"
                                                    Text="输出选项"
                                                    FontSize="16"
                                                    ToolTip="{Binding IsExpanded, ElementName=InputOptionsTreeView, Converter={StaticResource BooleanSwitchOperationConverter}, ConverterParameter=点击收起;点击展开}"
                                                    MouseDown="TreeViewHeader_Click"/>
                                            </TreeViewItem.Header>
                                            <TreeViewItem.ItemTemplate>
                                                <StaticResource ResourceKey="OptionsTreeViewItemTemplate"/>
                                            </TreeViewItem.ItemTemplate>
                                        </TreeViewItem>
                                    </TreeView>
                                </StackPanel>
                            </ScrollViewer>
                            <DockPanel
                                Grid.Row="1"
                                Height="240"
                                VerticalAlignment="Center"
                                HorizontalAlignment="Stretch"
                                Visibility="{Binding Visibility, ElementName=OptionsPanel, Converter={StaticResource ReversedVisibilityConverter}}">
                                <materialDesign:PackIcon
                                    x:Name="NoOptionsAvailableIcon"
                                    DockPanel.Dock="Top"
                                    Kind="TuneVariant"
                                    Margin="0 50 0 0"
                                    HorizontalAlignment="Center"
                                    Width="100"
                                    Height="100"
                                    Opacity="0.4"
                                    Foreground="{Binding Foreground, ElementName=FileDropIcon}"/>
                                <TextBlock
                                    DockPanel.Dock="Bottom"
                                    Text="当前没有可用的选项"
                                    HorizontalAlignment="Center"
                                    FontSize="25"
                                    Opacity="{Binding Opacity, ElementName=NoOptionsAvailableIcon}"
                                    Foreground="{Binding Foreground, ElementName=FileDropIcon}"/>
                            </DockPanel>
                        </Grid>
                    </materialDesign:Card>

                    <materialDesign:Card
                        x:Name="TaskExecutionCard"
                        Grid.Row="2"
                        Margin="10 10 20 20">
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="35"/>
                                <RowDefinition Height="1.5*"/>
                                <RowDefinition/>
                            </Grid.RowDefinitions>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="2.8*"/>
                                <ColumnDefinition Width="*" MaxWidth="150"/>
                            </Grid.ColumnDefinitions>
                            <TextBlock Grid.Row="0" Grid.Column="0" VerticalAlignment="Bottom" HorizontalAlignment="Left" Margin="15 0" Text="输出设置" FontSize="20"/>
                            <StackPanel Grid.Row="1" Grid.Column="0" Orientation="Horizontal" Margin="10 0 0 0">
                                <Button
                                    x:Name="BrowseExportFolderButton"
                                    VerticalAlignment="Bottom"
                                    Padding="0"
                                    Margin="5 12 0 7"
                                    Height="40"
                                    Width="40"
                                    Style="{StaticResource MaterialDesignFlatLightBgButton}"
                                    materialDesign:ShadowAssist.ShadowDepth="Depth2"
                                    Content="{materialDesign:PackIcon Folder}"
                                    IsEnabled="{Binding ExecutionInProgress, Converter={StaticResource InvertBooleanConverter}}"
                                    Click="BrowseExportFolderButton_Click"
                                    ToolTip="浏览文件夹"/>
                                <StackPanel Orientation="Horizontal">
                                    <TextBox
                                        VerticalAlignment="Center"
                                        Margin="10 0"
                                        d:Width="345"
                                        Width="{Binding ActualWidth, ElementName=TaskExecutionCard, Converter={StaticResource DoubleConstantSubConverter}, ConverterParameter=220, Mode=OneWay}"
                                        materialDesign:HintAssist.Hint="{Binding IsChecked, ElementName=ExportToSourceMenuItem, Converter={StaticResource BooleanSwitchOperationConverter}, ConverterParameter=输出路径（本次）;输出路径}"
                                        Text="{Binding ExportPath}"
                                        FontSize="16"
                                        Style="{StaticResource MaterialDesignFloatingHintTextBox}"
                                        IsEnabled="{Binding ExecutionInProgress, Converter={StaticResource InvertBooleanConverter}}"
                                        ToolTip="{Binding IsChecked, ElementName=ExportToSourceMenuItem, Converter={StaticResource BooleanSwitchOperationConverter}, ConverterParameter=当前已设置默认输出至源路径。修改此项将临时更换一次输出路径。;}"
                                        Cursor="Arrow">
                                    </TextBox>
                                </StackPanel>
                            </StackPanel>
                            <StackPanel Grid.Row="2" Margin="7 0 10 5" Orientation="Horizontal" MinWidth="420">
                                <StackPanel Grid.Row="1" Margin="10 0 10 0" Orientation="Horizontal">
                                    <ToggleButton
                                        x:Name="OpenExportFolderToggle"
                                        VerticalAlignment="Center"
                                        Style="{StaticResource MaterialDesignSwitchToggleButton}"
                                        Width="40"
                                        Height="20"
                                        Cursor="Hand"
                                        IsChecked="{Binding OpenExportFolder}"/>
                                    <TextBlock x:Name="OpenExportFolderText" VerticalAlignment="Center" Margin="5" Text="完成后打开输出路径" FontSize="14" Opacity="0.8"/>
                                </StackPanel>
                                <StackPanel Grid.Row="1" Margin="10 0 10 0" Orientation="Horizontal">
                                    <TextBlock x:Name="OverwriteOptionText" VerticalAlignment="Center" Margin="5" Text="遇到同名文件时" FontSize="14" Opacity="0.8"/>
                                    <ComboBox
                                        x:Name="OverwriteOptionComboBox"
                                        Margin="2.5 3.5 2.5 2.5"
                                        FontSize="14"
                                        materialDesign:ComboBoxAssist.ShowSelectedItem="False"
                                        IsEnabled="{Binding ExecutionInProgress, Converter={StaticResource InvertBooleanConverter}}"
                                        SelectedIndex="{Binding OverWriteOption, Converter={StaticResource IndexToEnumValueConverter}, ConverterParameter={x:Type local:OverwriteOptions}}">
                                        <ComboBoxItem IsSelected="True" Content="覆盖"/>
                                        <ComboBoxItem Content="跳过"/>
                                        <ComboBoxItem Content="询问"/>
                                    </ComboBox>
                                </StackPanel>
                            </StackPanel>
                            <Button
                                x:Name="StartExecutionButton"
                                Grid.Column="1"
                                Grid.Row="1"
                                Grid.RowSpan="2"
                                Width="Auto"
                                Height="60"
                                HorizontalAlignment="Stretch"
                                Margin="5 0 15 0"
                                Padding="0"
                                materialDesign:ButtonAssist.CornerRadius="10"
                                Style="{StaticResource MaterialDesignRaisedButton}"
                                materialDesign:ButtonProgressAssist.Value="-1"
                                materialDesign:ButtonProgressAssist.IsIndicatorVisible="True"
                                materialDesign:ButtonProgressAssist.IsIndeterminate="{Binding ExecutionInProgress}"
                                FontSize="20"
                                Content="{Binding ExecutionInProgress, Converter={StaticResource BooleanSwitchOperationConverter}, ConverterParameter=转换中;开始转换}"
                                Click="StartExecutionButton_Click">
                                <Button.IsEnabled>
                                    <MultiBinding Converter="{StaticResource BooleanAllConverter}" Mode="OneWay">
                                        <Binding Path="ExecutionInProgress" Converter="{StaticResource InvertBooleanConverter}" Mode="OneWay"/>
                                        <Binding Path="SelectedInputPlugin" Converter="{StaticResource NotNullConverter}" Mode="OneWay"/>
                                        <Binding Path="SelectedOutputPlugin" Converter="{StaticResource NotNullConverter}" Mode="OneWay"/>
                                        <Binding  Path="HasItems" ElementName="TaskListView" Mode="OneWay"/>
                                    </MultiBinding>
                                </Button.IsEnabled>
                            </Button>
                        </Grid>
                    </materialDesign:Card>
                </Grid>
            </Grid>
        </Grid>
    </materialDesign:DialogHost>
</Window>
