<Window
    x:Class="OpenSvip.GUI.MainWindow"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:local="clr-namespace:OpenSvip.GUI"
    xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
    xmlns:config="clr-namespace:OpenSvip.GUI.Config"
    mc:Ignorable="d"
    Title="OpenSVIP - 歌声合成工程文件转换器（预览版本）"
    Height="800"
    Width="1200"
    MinHeight="525"
    MinWidth="655"
    Style="{StaticResource MaterialDesignWindow}"
    FontFamily="Microsoft YaHei UI"
    Closing="Window_Closing">
    <Window.DataContext>
        <local:AppModel/>
    </Window.DataContext>
    <Window.Resources>
    </Window.Resources>
    <Window.InputBindings>
        <KeyBinding Gesture="Ctrl+I" Command="{x:Static local:MainWindow.ImportCommand}" CommandParameter="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=local:MainWindow}}"/>
        <KeyBinding Gesture="Ctrl+E" Command="{x:Static local:MainWindow.ExportCommand}" CommandParameter="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=local:MainWindow}}"/>
        <KeyBinding Gesture="Ctrl+Shift+E" Command="{x:Static local:MainWindow.BrowseAndExportCommand}" CommandParameter="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=local:MainWindow}}"/>
        <KeyBinding Gesture="Ctrl+R" Command="{x:Static local:MainWindow.ResetCommand}" CommandParameter="{Binding}"/>
        <KeyBinding Gesture="Ctrl+W" Command="{x:Static local:MainWindow.SwapPluginCommand}" CommandParameter="{Binding}"/>
        <KeyBinding Gesture="Ctrl+P" Command="{x:Static local:MainWindow.InstallPluginCommand}" CommandParameter="{Binding}"/>
        <KeyBinding Gesture="Ctrl+A" Command="{x:Static local:MainWindow.AboutCommand}" CommandParameter="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=local:MainWindow}}"/>
    </Window.InputBindings>
    <materialDesign:DialogHost Identifier="RootDialogHost">
        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition Height="25"/>
                <RowDefinition/>
            </Grid.RowDefinitions>
            <Border Grid.Row="0">
                <Border.Resources>
                    <x:Array x:Key="DefaultExportEnumValues" Type="config:ExportPaths">
                        <config:ExportPaths>Unset</config:ExportPaths>
                        <config:ExportPaths>Source</config:ExportPaths>
                        <config:ExportPaths>Desktop</config:ExportPaths>
                        <config:ExportPaths>Custom</config:ExportPaths>
                    </x:Array>
                    <x:Array x:Key="AppearanceThemeEnumValues" Type="config:AppearanceThemes">
                        <config:AppearanceThemes>Light</config:AppearanceThemes>
                        <config:AppearanceThemes>Dark</config:AppearanceThemes>
                        <config:AppearanceThemes>System</config:AppearanceThemes>
                    </x:Array>
                </Border.Resources>
                <Grid>
                    <ComboBox
                        x:Name="HiddenDefaultExportComboBox"
                        Visibility="Collapsed"
                        ItemsSource="{StaticResource DefaultExportEnumValues}"
                        SelectedIndex="{Binding DefaultExportPath, Converter={StaticResource IndexToEnumValueConverter}, ConverterParameter={x:Type config:ExportPaths}}"/>
                    <ComboBox
                        x:Name="HiddenAppearanceThemeComboBox"
                        Visibility="Collapsed"
                        ItemsSource="{StaticResource AppearanceThemeEnumValues}"
                        SelectedIndex="{Binding AppearanceThemes, Converter={StaticResource IndexToEnumValueConverter}, ConverterParameter={x:Type config:AppearanceThemes}}">
                    </ComboBox>
                </Grid>

            </Border>
            <DockPanel x:Name="MenuPanel" Grid.Row="0">
                <Menu IsMainMenu="True" Margin="20 0 20 0" Height="25" FontFamily="Microsoft YaHei UI" FontSize="13" FontWeight="Normal">
                    <Menu.Resources>
                        <Style TargetType="MenuItem" BasedOn="{StaticResource MaterialDesignMenuItem}">
                            <Setter Property="Height" Value="30"/>
                        </Style>
                        <Style x:Key="NarrowCheckableMenuItem" TargetType="MenuItem" BasedOn="{StaticResource MaterialDesignMenuItem}">
                            <Setter Property="Margin" Value="-10 0 -5 0"/>
                            <Setter Property="IsCheckable" Value="True"/>
                        </Style>
                    </Menu.Resources>
                    <MenuItem Header="文件(_F)" Height="25" Padding="10 0">
                        <MenuItem
                            Header="导入文件(_I)..."
                            InputGestureText="Ctrl+I"
                            Icon="{materialDesign:PackIcon Kind=TrayArrowDown}"
                            IsEnabled="{Binding ExecutionInProgress, Converter={StaticResource InvertBooleanConverter}}"
                            Click="FileMaskPanel_Click"/>
                        <MenuItem
                            Header="导出文件(_E)"
                            Icon="{materialDesign:PackIcon Kind=ShareAllOutline}"
                            IsEnabled="{Binding IsEnabled, ElementName=StartExecutionButton}">
                            <MenuItem
                                Header="立即开始转换(_N)"
                                InputGestureText="Ctrl+E"
                                Click="StartExecutionButton_Click"/>
                            <MenuItem
                                Header="选择输出路径(_B)..."
                                InputGestureText="Ctrl+Shift+E"
                                Click="BrowseAndExportMenu_Click"/>
                        </MenuItem>
                        <MenuItem Header="重置列表(_R)" Icon="{materialDesign:PackIcon Kind=Autorenew}" InputGestureText="Ctrl+R" Click="ClearTasksButton_Click"/>
                    </MenuItem>
                    <MenuItem Header="转换(_C)" Height="25" Padding="10 0">
                        <MenuItem x:Name="ImportPluginMenuItem" Header="导入格式(_F)">
                            <MenuItem.ItemContainerStyle>
                                <Style TargetType="MenuItem" BasedOn="{StaticResource NarrowCheckableMenuItem}">
                                    <Setter Property="IsChecked">
                                        <Setter.Value>
                                            <MultiBinding Converter="{StaticResource ItemIsCheckedConverter}" Mode="OneWay">
                                                <Binding RelativeSource="{RelativeSource Mode=FindAncestor, AncestorType=local:MainWindow}" Path="DataContext.SelectedInputPluginIndex" Mode="OneWay"/>
                                                <Binding RelativeSource="{RelativeSource Mode=Self}"/>
                                                <Binding RelativeSource="{RelativeSource Mode=FindAncestor, AncestorType=MenuItem}" Path="Items"/>
                                            </MultiBinding>
                                        </Setter.Value>
                                    </Setter>
                                </Style>
                            </MenuItem.ItemContainerStyle>
                        </MenuItem>
                        <MenuItem x:Name="ExportPluginMenuItem" Header="导出格式(_T)">
                            <MenuItem.ItemContainerStyle>
                                <Style TargetType="MenuItem" BasedOn="{StaticResource NarrowCheckableMenuItem}">
                                    <Setter Property="IsChecked">
                                        <Setter.Value>
                                            <MultiBinding Converter="{StaticResource ItemIsCheckedConverter}" Mode="OneWay">
                                                <Binding RelativeSource="{RelativeSource Mode=FindAncestor, AncestorType=local:MainWindow}" Path="DataContext.SelectedOutputPluginIndex" Mode="OneWay"/>
                                                <Binding RelativeSource="{RelativeSource Mode=Self}"/>
                                                <Binding RelativeSource="{RelativeSource Mode=FindAncestor, AncestorType=MenuItem}" Path="Items"/>
                                            </MultiBinding>
                                        </Setter.Value>
                                    </Setter>
                                </Style>
                            </MenuItem.ItemContainerStyle>
                        </MenuItem>
                        <MenuItem Header="上下交换(_W)" InputGestureText="Ctrl+W" Icon="{materialDesign:PackIcon Kind=SwapVertical, Size=18}" Command="{x:Static local:MainWindow.SwapPluginCommand}" CommandParameter="{Binding}"/>
                        <Separator/>
                        <MenuItem Header="安装插件(_P)..." InputGestureText="Ctrl+P" Icon="{materialDesign:PackIcon Kind=PuzzlePlusOutline}" Command="{x:Static local:MainWindow.InstallPluginCommand}" CommandParameter="{Binding}"/>
                        <MenuItem Header="插件市场(_M)" IsEnabled="False" Icon="{materialDesign:PackIcon Kind=CloudSearchOutline}"/>
                    </MenuItem>
                    <MenuItem Header="设置(_O)" Height="25" Padding="10 0">
                        <MenuItem Header="自动检测导入格式(_D)" IsCheckable="True" IsChecked="{Binding IsChecked, ElementName=AutoDetectToggle}"/>
                        <MenuItem Header="切换格式时重置列表(_R)" IsCheckable="True" IsChecked="{Binding IsChecked, ElementName=AutoResetToggle}"/>
                        <MenuItem Header="自动设置后缀名(_E)" IsCheckable="True" IsChecked="{Binding IsChecked, ElementName=AutoExtensionToggle}"/>
                        <MenuItem Header="完成后打开输出路径(_O)" IsCheckable="True" IsChecked="{Binding IsChecked, ElementName=OpenExportFolderToggle}"/>
                        <MenuItem Header="遇到同名文件时(_H)" HorizontalContentAlignment="Stretch" ItemContainerStyle="{StaticResource NarrowCheckableMenuItem}">
                            <MenuItem Header="覆盖(_C)"
                                      IsChecked="{Binding SelectedIndex, ElementName=OverwriteOptionComboBox, Converter={StaticResource IntegerConstantEqualsConverter}, ConverterParameter=0}"/>
                            <MenuItem Header="跳过(_S)"
                                      IsChecked="{Binding SelectedIndex, ElementName=OverwriteOptionComboBox, Converter={StaticResource IntegerConstantEqualsConverter}, ConverterParameter=1}"/>
                            <MenuItem Header="询问(_A)"
                                      IsChecked="{Binding SelectedIndex, ElementName=OverwriteOptionComboBox, Converter={StaticResource IntegerConstantEqualsConverter}, ConverterParameter=2}"/>
                        </MenuItem>
                        <MenuItem Header="默认输出路径(_P)" ItemContainerStyle="{StaticResource NarrowCheckableMenuItem}">
                            <MenuItem Header="无(_N)"
                                      IsChecked="{Binding SelectedIndex, ElementName=HiddenDefaultExportComboBox, Converter={StaticResource IntegerConstantEqualsConverter}, ConverterParameter=0}"
                                      IsEnabled="{Binding ExecutionInProgress, Converter={StaticResource InvertBooleanConverter}}"/>
                            <MenuItem Header="源路径(_S)"
                                      IsChecked="{Binding SelectedIndex, ElementName=HiddenDefaultExportComboBox, Converter={StaticResource IntegerConstantEqualsConverter}, ConverterParameter=1}"
                                      IsEnabled="{Binding ExecutionInProgress, Converter={StaticResource InvertBooleanConverter}}"/>
                            <MenuItem Header="桌面(_D)"
                                      IsChecked="{Binding SelectedIndex, ElementName=HiddenDefaultExportComboBox, Converter={StaticResource IntegerConstantEqualsConverter}, ConverterParameter=2}"
                                      IsEnabled="{Binding ExecutionInProgress, Converter={StaticResource InvertBooleanConverter}}"/>
                            <MenuItem Header="自定义(_C)"
                                      IsChecked="{Binding SelectedIndex, ElementName=HiddenDefaultExportComboBox, Converter={StaticResource IntegerConstantEqualsConverter}, ConverterParameter=3}"
                                      ToolTip="{Binding SelectedCustomExportPath}">
                                <MenuItem.IsEnabled>
                                    <MultiBinding Converter="{StaticResource BooleanAllConverter}" Mode="OneWay">
                                        <Binding Path="ExecutionInProgress" Converter="{StaticResource InvertBooleanConverter}"/>
                                        <Binding Path="SelectedCustomExportPath" Converter="{StaticResource NotNullConverter}"/>
                                    </MultiBinding>
                                </MenuItem.IsEnabled>
                            </MenuItem>
                            <Separator/>
                            <MenuItem
                                Header="管理自定义路径(M)..."
                                Icon="{materialDesign:PackIcon Kind=FormatListBulleted}"
                                IsCheckable="False"
                                Command="{x:Static local:MainWindow.ManagePathsCommand}"
                                CommandParameter="{Binding}"/>
                        </MenuItem>
                        <Separator/>
                        <MenuItem Header="外观主题(_T)" Icon="{materialDesign:PackIcon Kind=PaletteOutline}" ItemContainerStyle="{StaticResource NarrowCheckableMenuItem}">
                            <MenuItem
                                Header="浅色(_L)"
                                IsChecked="{Binding SelectedIndex, ElementName=HiddenAppearanceThemeComboBox, Converter={StaticResource IntegerConstantEqualsConverter}, ConverterParameter=0}"/>
                            <MenuItem
                                Header="深色(_D)"
                                IsChecked="{Binding SelectedIndex, ElementName=HiddenAppearanceThemeComboBox, Converter={StaticResource IntegerConstantEqualsConverter}, ConverterParameter=1}"/>
                            <MenuItem
                                Header="系统(_S)"
                                IsChecked="{Binding SelectedIndex, ElementName=HiddenAppearanceThemeComboBox, Converter={StaticResource IntegerConstantEqualsConverter}, ConverterParameter=2}"/>
                        </MenuItem>
                    </MenuItem>
                    <MenuItem Header="帮助(_H)" Height="25" Padding="10 0">
                        <MenuItem Header="在线手册(_M)" IsEnabled="False" Icon="{materialDesign:PackIcon Kind=TextBoxSearchOutline}" InputGestureText="Ctrl+H"/>
                        <MenuItem Header="检查更新(_U)" IsEnabled="False" Icon="{materialDesign:PackIcon Kind=UploadMultiple}" InputGestureText="Ctrl+U"/>
                        <MenuItem Header="关于 OpenSVIP(_A)" Icon="{materialDesign:PackIcon Kind=InformationOutline}" InputGestureText="Ctrl+A" Click="AboutMenuItem_Click"/>
                    </MenuItem>
                </Menu>
            </DockPanel>
            <Grid Grid.Row="1">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition/>
                    <ColumnDefinition MinWidth="350"/>
                </Grid.ColumnDefinitions>

                <Grid Grid.Column="0">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition/>
                    </Grid.RowDefinitions>
                    <materialDesign:Card
                        x:Name="PluginSelectionCard"
                        Grid.Row="0"
                        Margin="20 5 10 10"
                        Padding="0 0 0 5">
                        <materialDesign:Card.Resources>
                            <Style x:Key="PluginComboBox" TargetType="ComboBox" BasedOn="{StaticResource MaterialDesignOutlinedComboBox}">
                                <Setter Property="VerticalAlignment" Value="Center"/>
                                <Setter Property="HorizontalAlignment" Value="Stretch"/>
                                <Setter Property="VerticalContentAlignment" Value="Center"/>
                                <Setter Property="Margin" Value="15 0 0 0"/>
                                <Setter Property="Padding" Value="16 5"/>
                                <Setter Property="Height" Value="45"/>
                                <Setter Property="FontSize" Value="14"/>
                                <Setter Property="materialDesign:HintAssist.HintOpacity" Value="0.8"/>
                                <Setter Property="materialDesign:HintAssist.Foreground" Value="{StaticResource ThemedHighContrastIndigoBrush}"/>
                                <Setter Property="materialDesign:TextFieldAssist.UnderlineBrush" Value="{StaticResource ThemedIndigoBrush}"/>
                                <Setter Property="IsEnabled" Value="{Binding ExecutionInProgress, Converter={StaticResource InvertBooleanConverter}}"/>
                            </Style>
                            <Style x:Key="PluginDetailsPopupBox" TargetType="materialDesign:PopupBox" BasedOn="{StaticResource MaterialDesignPopupBox}">
                                <Setter Property="Margin" Value="10 10 0 8"/>
                                <Setter Property="PlacementMode" Value="BottomAndAlignCentres"/>
                                <Setter Property="StaysOpen" Value="True"/>
                                <Setter Property="ToolTip" Value="查看详细信息"/>
                                <Setter Property="UnfurlOrientation" Value="Horizontal"/>
                                <Setter Property="Cursor" Value="Hand"/>
                            </Style>
                            <Style x:Key="PluginDetailsPopupBoxRectangle" TargetType="Rectangle">
                                <Setter Property="Margin" Value="0 -1 0 1"/>
                                <Setter Property="Width" Value="45"/>
                                <Setter Property="Height" Value="45"/>
                                <Setter Property="RadiusX" Value="4"/>
                                <Setter Property="RadiusY" Value="4"/>
                                <Setter Property="StrokeThickness" Value="1"/>
                                <Setter Property="Stroke" Value="{StaticResource ThemedHighContrastGreyscaleBrush}"/>
                            </Style>
                            <Style x:Key="PluginDetailsPopupBoxIcon" TargetType="materialDesign:PackIcon">
                                <Setter Property="Kind" Value="InformationOutline"/>
                                <Setter Property="HorizontalAlignment" Value="Center"/>
                                <Setter Property="VerticalAlignment" Value="Center"/>
                                <Setter Property="Width" Value="20"/>
                                <Setter Property="Height" Value="20"/>
                                <Setter Property="Foreground" Value="{StaticResource ThemedHighContrastGreyscaleBrush}"/>
                            </Style>
                        </materialDesign:Card.Resources>
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="35"/>
                                <RowDefinition/>
                                <RowDefinition/>
                            </Grid.RowDefinitions>
                            <TextBlock Grid.Row="0" VerticalAlignment="Bottom" HorizontalAlignment="Left" Margin="15 0" Text="格式选择" FontSize="20"/>
                            <StackPanel x:Name="ImportPluginPanel" Grid.Row="1">
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition/>
                                        <ColumnDefinition Width="70"/>
                                    </Grid.ColumnDefinitions>
                                    <Grid.RowDefinitions>
                                        <RowDefinition/>
                                        <RowDefinition Height="Auto"/>
                                    </Grid.RowDefinitions>
                                    <ComboBox
                                        x:Name="ImportPluginComboBox"
                                        Grid.Row="0"
                                        Grid.Column="0"
                                        Style="{StaticResource PluginComboBox}"
                                        materialDesign:HintAssist.Hint="导入工程格式"
                                        SelectedIndex="{Binding SelectedInputPluginIndex}"
                                        SelectionChanged="ImportPluginComboBox_SelectionChanged">
                                    </ComboBox>
                                    <materialDesign:PopupBox
                                        Grid.Row="0"
                                        Grid.Column="1"
                                        Style="{StaticResource PluginDetailsPopupBox}"
                                        IsEnabled="{Binding SelectedIndex, ElementName=ImportPluginComboBox, Converter={StaticResource IndexToBooleanConverter}}">
                                        <materialDesign:PopupBox.ToggleContent>
                                            <Grid>
                                                <Rectangle Style="{StaticResource PluginDetailsPopupBoxRectangle}"/>
                                                <materialDesign:PackIcon Style="{StaticResource PluginDetailsPopupBoxIcon}"/>
                                            </Grid>
                                        </materialDesign:PopupBox.ToggleContent>
                                        <local:PluginDetailsBoard DataContext="{Binding SelectedInputPlugin, Mode=OneWay}"/>
                                    </materialDesign:PopupBox>
                                    <WrapPanel Grid.Row="1" Grid.Column="0" Grid.ColumnSpan="2" VerticalAlignment="Center" Margin="7 -5 0 0" Orientation="Horizontal">
                                        <StackPanel Margin="10 0 10 0" Orientation="Horizontal">
                                            <ToggleButton
                                                x:Name="AutoDetectToggle"
                                                VerticalAlignment="Center"
                                                Style="{StaticResource MaterialDesignSwitchToggleButton}"
                                                Background="{StaticResource ThemedIndigoBrush}"
                                                Width="40"
                                                Height="20"
                                                Cursor="Hand"
                                                IsChecked="{Binding AutoDetectFormat}"/>
                                            <TextBlock x:Name="AutoDetectText" VerticalAlignment="Center" Margin="5" Text="自动检测导入格式" FontSize="14" Opacity="0.8"/>
                                        </StackPanel>
                                        <StackPanel Margin="10 0 10 0" Orientation="Horizontal">
                                            <ToggleButton
                                                x:Name="AutoResetToggle"
                                                VerticalAlignment="Center"
                                                Style="{StaticResource MaterialDesignSwitchToggleButton}"
                                                Background="{StaticResource ThemedIndigoBrush}"
                                                Width="40"
                                                Height="20"
                                                Cursor="Hand"
                                                IsChecked="{Binding AutoResetTasks}"/>
                                            <TextBlock x:Name="AutoResetText" VerticalAlignment="Center" Margin="5" Text="切换格式时重置列表" FontSize="14" Opacity="0.8"/>
                                        </StackPanel>
                                    </WrapPanel>
                                </Grid>
                            </StackPanel>

                            <StackPanel x:Name="ExportPluginPanel" Grid.Row="2">
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition/>
                                        <ColumnDefinition Width="70"/>
                                    </Grid.ColumnDefinitions>
                                    <Grid.RowDefinitions>
                                        <RowDefinition/>
                                        <RowDefinition Height="Auto"/>
                                    </Grid.RowDefinitions>
                                    <ComboBox
                                        x:Name="ExportPluginComboBox"
                                        Grid.Row="0"
                                        Grid.Column="0"
                                        Style="{StaticResource PluginComboBox}"
                                        materialDesign:HintAssist.Hint="导出工程格式"
                                        SelectedIndex="{Binding SelectedOutputPluginIndex}"
                                        SelectionChanged="ExportPluginComboBox_SelectionChanged"/>
                                    <materialDesign:PopupBox
                                        Grid.Row="0"
                                        Grid.Column="1"
                                        Style="{StaticResource PluginDetailsPopupBox}"
                                        IsEnabled="{Binding SelectedIndex, ElementName=ExportPluginComboBox, Converter={StaticResource IndexToBooleanConverter}}">
                                        <materialDesign:PopupBox.ToggleContent>
                                            <Grid>
                                                <Rectangle Style="{StaticResource PluginDetailsPopupBoxRectangle}"/>
                                                <materialDesign:PackIcon Style="{StaticResource PluginDetailsPopupBoxIcon}"/>
                                            </Grid>
                                        </materialDesign:PopupBox.ToggleContent>
                                        <local:PluginDetailsBoard DataContext="{Binding SelectedOutputPlugin, Mode=OneWay}"/>
                                    </materialDesign:PopupBox>
                                    <WrapPanel Grid.Row="1" Grid.Column="0" Grid.ColumnSpan="2" VerticalAlignment="Center" Margin="7 -5 0 0" Orientation="Horizontal">
                                        <StackPanel Margin="10 0 10 0" Orientation="Horizontal">
                                            <ToggleButton
                                                x:Name="AutoExtensionToggle"
                                                VerticalAlignment="Center"
                                                Style="{StaticResource MaterialDesignSwitchToggleButton}"
                                                Background="{StaticResource ThemedIndigoBrush}"
                                                Width="40"
                                                Height="20"
                                                Cursor="Hand"
                                                IsChecked="{Binding AutoExtension}"/>
                                            <TextBlock x:Name="AutoExtensionText" VerticalAlignment="Center" Margin="5" Text="自动设置后缀名" FontSize="14"/>
                                        </StackPanel>

                                    </WrapPanel>
                                </Grid>
                            </StackPanel>

                            <Button
                                Grid.Row="1"
                                Grid.RowSpan="2"
                                HorizontalAlignment="Right"
                                Margin="20 0 14 23"
                                Width="45"
                                Padding="0"
                                Style="{StaticResource MaterialDesignFlatButton}"
                                Foreground="{StaticResource ThemedIndigoBrush}"
                                materialDesign:ButtonAssist.CornerRadius="4"
                                Content="{materialDesign:PackIcon Kind=SwapVerticalCircle, Size=22}"
                                ToolTip="上下交换"
                                Command="{x:Static local:MainWindow.SwapPluginCommand}"
                                CommandParameter="{Binding}"/>
                        </Grid>
                    </materialDesign:Card>

                    <materialDesign:Card
                        x:Name="ConverterTaskCard"
                        Grid.Row="1"
                        Margin="20 10 10 20">
                        <Grid>
                            <DockPanel x:Name="FileDropPanel" Visibility="{Binding Visibility, ElementName=TaskListView, Converter={StaticResource ReversedVisibilityConverter}}">
                                <Grid>
                                    <StackPanel
                                        x:Name="FileDropAndClickMaskPanel"
                                        Background="Black"
                                        Opacity="0"
                                        Panel.ZIndex="16"
                                        AllowDrop="True"
                                        Cursor="Hand"
                                        MouseEnter="FileMaskPanel_Focus"
                                        MouseLeave="FileMaskPanel_UnFocus"
                                        MouseDown="FileMaskPanel_Click"
                                        Drop="FileMaskPanel_Drop"
                                        DragEnter="FileMaskPanel_Focus"
                                        DragLeave="FileMaskPanel_UnFocus"/>
                                    <DockPanel Height="240" VerticalAlignment="Center" HorizontalAlignment="Stretch">
                                        <materialDesign:PackIcon
                                            x:Name="FileDropIcon"
                                            DockPanel.Dock="Top"
                                            Kind="TrayArrowDown"
                                            Margin="0 50 0 0"
                                            HorizontalAlignment="Center"
                                            Width="100"
                                            Height="100"
                                            Opacity="0.4"
                                            Foreground="{StaticResource FunctionalAreaIconBrush}"/>
                                        <TextBlock
                                            x:Name="FileDropText"
                                            DockPanel.Dock="Bottom"
                                            Text="拖拽或单击导入文件"
                                            HorizontalAlignment="Center"
                                            FontSize="25"
                                            Opacity="{Binding Opacity, ElementName=FileDropIcon}"
                                            Foreground="{StaticResource FunctionalAreaIconBrush}"/>
                                    </DockPanel>
                                    <Rectangle
                                        x:Name="FileDropRectangle"
                                        Margin="10 10 10 10"
                                        Stroke="{StaticResource FunctionalAreaIconBrush}"
                                        Opacity="{Binding Opacity, ElementName=FileDropIcon}"
                                        StrokeThickness="3"
                                        StrokeLineJoin="Round"
                                        RadiusX="5"
                                        RadiusY="5"
                                        StrokeEndLineCap="Round"
                                        StrokeStartLineCap="Round"
                                        StrokeDashArray="5 3"/>
                                </Grid>
                            </DockPanel>
                            <DockPanel x:Name="TaskListPanel" Visibility="{Binding Visibility, ElementName=TaskListView}">
                                <Grid>
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="35"/>
                                        <RowDefinition/>
                                        <RowDefinition Height="55"/>
                                    </Grid.RowDefinitions>
                                    <TextBlock VerticalAlignment="Bottom" HorizontalAlignment="Left" Margin="15 0" Text="任务列表" FontSize="20"/>
                                    <ScrollViewer
                                        Grid.Row="1"
                                        Margin="7 5 12 0"
                                        VerticalScrollBarVisibility="Auto"
                                        PanningMode="VerticalOnly"
                                        AllowDrop="True"
                                        Drop="FileMaskPanel_Drop"
                                        DragEnter="FileMaskPanel_Focus"
                                        DragLeave="FileMaskPanel_UnFocus">
                                        <ItemsControl
                                            x:Name="TaskListView"
                                            Margin="6 5 10 5"
                                            ItemsSource="{Binding TaskList}"
                                            Visibility="{Binding HasItems, ElementName=TaskListView, Converter={StaticResource BooleanToVisibilityConverter}}"
                                            IsEnabled="{Binding ExecutionInProgress, Converter={StaticResource InvertBooleanConverter}}"
                                            Grid.IsSharedSizeScope="True">
                                            <ItemsControl.ItemTemplate>
                                                <DataTemplate DataType="{x:Type local:TaskViewModel}">
                                                    <local:TaskListViewItem/>
                                                </DataTemplate>
                                            </ItemsControl.ItemTemplate>
                                        </ItemsControl>
                                    </ScrollViewer>
                                    <materialDesign:PopupBox
                                        Grid.Row="2"
                                        HorizontalAlignment="Left"
                                        Margin="12 0"
                                        Width="40"
                                        Height="40"
                                        Style="{StaticResource MaterialDesignMultiFloatingActionPopupBox}"
                                        Visibility="{Binding HasItems, ElementName=TaskListView, Converter={StaticResource BooleanToVisibilityConverter}}"
                                        PopupMode="MouseOver"
                                        PlacementMode="RightAndAlignMiddles"
                                        UnfurlOrientation="Horizontal"
                                        ToolTip="操作"
                                        IsEnabled="{Binding ExecutionInProgress, Converter={StaticResource InvertBooleanConverter}}">
                                        <materialDesign:PopupBox.ToggleContent>
                                            <materialDesign:PackIcon Kind="Tools" Width="20" Height="20"/>
                                        </materialDesign:PopupBox.ToggleContent>
                                        <StackPanel Orientation="Horizontal">
                                            <StackPanel.Resources>
                                                <Style TargetType="Button" BasedOn="{StaticResource MaterialDesignFloatingActionMiniLightButton}">
                                                    <Setter Property="Margin" Value="5 0"/>
                                                    <Setter Property="Background" Value="{StaticResource ThemedLowContrastIndigoBrush}"/>
                                                    <Setter Property="BorderBrush" Value="{StaticResource ThemedLowContrastIndigoBrush}"/>
                                                </Style>
                                            </StackPanel.Resources>
                                            <Button
                                                x:Name="AppendTasksButton"
                                                ToolTip="继续添加文件"
                                                Click="FileMaskPanel_Click">
                                                <materialDesign:PackIcon Kind="Add"/>
                                            </Button>
                                            <Button
                                                x:Name="ClearTasksButton"
                                                ToolTip="清空所有导入"
                                                Click="ClearTasksButton_Click">
                                                <materialDesign:PackIcon Kind="Refresh"/>
                                            </Button>
                                            <Button
                                                x:Name="RestoreTasksButton"
                                                ToolTip="恢复默认命名"
                                                Click="RestoreTasksButton_Click">
                                                <materialDesign:PackIcon Kind="FormTextbox"/>
                                            </Button>
                                            <Button
                                                x:Name="FilterTasksButton"
                                                ToolTip="过滤多余项目"
                                                Click="FilterTasksButton_Click">
                                                <materialDesign:PackIcon Kind="FilterMinusOutline"/>
                                            </Button>
                                        </StackPanel>
                                    </materialDesign:PopupBox>
                                </Grid>
                            </DockPanel>
                        </Grid>
                    </materialDesign:Card>
                </Grid>

                <Grid Grid.Column="1">
                    <Grid.RowDefinitions>
                        <RowDefinition/>
                        <RowDefinition Height="Auto"/>
                    </Grid.RowDefinitions>
                    <materialDesign:Card
                        x:Name="ConverterOptionsCard"
                        Grid.Row="0"
                        Margin="10 5 20 10">
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="35"/>
                                <RowDefinition/>
                            </Grid.RowDefinitions>
                            <TextBlock Grid.Row="0" VerticalAlignment="Bottom" HorizontalAlignment="Left" Margin="15 0" Text="高级选项" FontSize="20"/>
                            <ScrollViewer
                                x:Name="OptionScrollViewer"
                                Grid.Row="1"
                                Margin="5 10 12 20"
                                PanningMode="VerticalOnly"
                                VerticalScrollBarVisibility="Auto"
                                PreviewMouseWheel="OptionScrollViewer_MouseWheel"
                                PreviewTouchMove="OptionScrollViewer_TouchMove">
                                <StackPanel x:Name="OptionsPanel" CanVerticallyScroll="True">
                                    <StackPanel.Visibility>
                                        <MultiBinding Converter="{StaticResource AnyTrueAsVisibleConverter}">
                                            <Binding ElementName="InputOptionsTreeView" Path="HasItems"/>
                                            <Binding ElementName="OutputOptionsTreeView" Path="HasItems"/>
                                        </MultiBinding>
                                    </StackPanel.Visibility>
                                    <StackPanel.Resources>
                                        <Style TargetType="TreeView" BasedOn="{StaticResource MaterialDesignTreeView}">
                                            <Setter Property="ScrollViewer.PanningMode" Value="None"/>
                                            <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Disabled"/>
                                            <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Disabled"/>
                                            <EventSetter Event="PreviewMouseWheel" Handler="OptionTreeView_MouseWheel"/>
                                            <EventSetter Event="PreviewTouchMove" Handler="OptionTreeView_TouchMove"/>
                                        </Style>
                                        <Style x:Key="TreeViewHeaderComment" TargetType="TextBlock" BasedOn="{StaticResource MaterialDesignTextBlock}">
                                            <Setter Property="VerticalAlignment" Value="Center"/>
                                            <Setter Property="Margin" Value="10 2 0 0"/>
                                            <Setter Property="Opacity" Value="0.8"/>
                                            <Setter Property="FontSize" Value="13"/>
                                            <Setter Property="TextTrimming" Value="CharacterEllipsis"/>
                                            <Setter Property="MaxWidth">
                                                <Setter.Value>
                                                    <Binding
                                                        RelativeSource="{RelativeSource Mode=FindAncestor, AncestorType=materialDesign:Card}"
                                                        Path="ActualWidth"
                                                        Converter="{StaticResource DoubleConstantSubConverter}"
                                                        ConverterParameter="160"/>
                                                </Setter.Value>
                                            </Setter>
                                        </Style>
                                        <Style TargetType="TreeViewItem" BasedOn="{StaticResource MaterialDesignTreeViewItem}">
                                            <Setter Property="IsExpanded" Value="True"/>
                                            <Setter Property="materialDesign:TreeViewAssist.ShowSelection" Value="False"/>
                                            <Setter Property="materialDesign:TreeViewAssist.ExpanderSize" Value="20"/>
                                        </Style>
                                        <DataTemplate x:Key="OptionsTreeViewItemTemplate">
                                            <Grid>
                                                <Grid.RowDefinitions>
                                                    <RowDefinition Height="Auto"/>
                                                    <RowDefinition/>
                                                </Grid.RowDefinitions>
                                                <materialDesign:PackIcon
                                                    Grid.Row="0"
                                                    Kind="TuneVariant"
                                                    VerticalAlignment="Center"
                                                    HorizontalAlignment="Left"
                                                    Margin="0 0 0 10"
                                                    Opacity="0.8"/>
                                                <Separator Grid.Row="0" Margin="20 0 0 10" VerticalAlignment="Center" Opacity="0.6"/>
                                                <WrapPanel
                                                    Grid.Row="1"
                                                    Orientation="Horizontal"
                                                    Width="{Binding ActualWidth, ElementName=ConverterOptionsCard, Converter={StaticResource DoubleConstantSubConverter}, ConverterParameter=64}">
                                                    <local:OptionTreeViewItem
                                                        DataContext="{Binding}"
                                                        VerticalAlignment="Center"
                                                        HorizontalAlignment="Stretch"
                                                        IsEnabled="{Binding DataContext.ExecutionInProgress, RelativeSource={RelativeSource FindAncestor, AncestorType=Window}, Converter={StaticResource InvertBooleanConverter}}"/>
                                                </WrapPanel>
                                            </Grid>
                                        </DataTemplate>
                                    </StackPanel.Resources>
                                    <TreeView
                                        Visibility="{Binding HasItems, ElementName=InputOptionsTreeView, Converter={StaticResource BooleanToVisibilityConverter}}">
                                        <TreeViewItem
                                            x:Name="InputOptionsTreeView"
                                            ItemsSource="{Binding SelectedInputOptions}">
                                            <TreeViewItem.Header>
                                                <StackPanel Orientation="Horizontal" VerticalAlignment="Center">
                                                    <TextBlock
                                                        VerticalAlignment="Center"
                                                        Margin="-8 0 0 0"
                                                        Text="输入选项"
                                                        FontSize="16"
                                                        ToolTip="{Binding IsExpanded, ElementName=InputOptionsTreeView, Converter={StaticResource BooleanSwitchOperationConverter}, ConverterParameter=点击收起;点击展开}"
                                                        MouseDown="TreeViewHeader_Click"/>
                                                    <TextBlock Style="{StaticResource TreeViewHeaderComment}" Text="["/>
                                                    <TextBlock Style="{StaticResource TreeViewHeaderComment}" Margin="7 2 0 0">
                                                        <TextBlock.Text>
                                                            <Binding Path="SelectedInputFormat" StringFormat="{}导入自 {0}" Mode="OneWay"/>
                                                        </TextBlock.Text>
                                                    </TextBlock>
                                                    <TextBlock Style="{StaticResource TreeViewHeaderComment}" Text="]" Margin="7 2 0 0"/>
                                                </StackPanel>
                                            </TreeViewItem.Header>
                                            <TreeViewItem.ItemTemplate>
                                                <StaticResource ResourceKey="OptionsTreeViewItemTemplate"/>
                                            </TreeViewItem.ItemTemplate>
                                        </TreeViewItem>
                                    </TreeView>
                                    <TreeView
                                        Visibility="{Binding HasItems, ElementName=OutputOptionsTreeView, Converter={StaticResource BooleanToVisibilityConverter}}">
                                        <TreeViewItem
                                            x:Name="OutputOptionsTreeView"
                                            ItemsSource="{Binding SelectedOutputOptions}">
                                            <TreeViewItem.Header>
                                                <StackPanel Orientation="Horizontal" VerticalAlignment="Center">
                                                    <TextBlock
                                                        VerticalAlignment="Center"
                                                        Margin="-8 0 0 0"
                                                        Text="输出选项"
                                                        FontSize="16"
                                                        ToolTip="{Binding IsExpanded, ElementName=OutputOptionsTreeView, Converter={StaticResource BooleanSwitchOperationConverter}, ConverterParameter=点击收起;点击展开}"
                                                        MouseDown="TreeViewHeader_Click"/>
                                                    <TextBlock Style="{StaticResource TreeViewHeaderComment}" Text="["/>
                                                    <TextBlock Style="{StaticResource TreeViewHeaderComment}" Margin="7 2 0 0">
                                                        <TextBlock.Text>
                                                            <Binding Path="SelectedOutputFormat" StringFormat="{}导出为 {0}" Mode="OneWay"/>
                                                        </TextBlock.Text>
                                                    </TextBlock>
                                                    <TextBlock Style="{StaticResource TreeViewHeaderComment}" Text="]" Margin="7 2 0 0"/>
                                                </StackPanel>
                                            </TreeViewItem.Header>
                                            <TreeViewItem.ItemTemplate>
                                                <StaticResource ResourceKey="OptionsTreeViewItemTemplate"/>
                                            </TreeViewItem.ItemTemplate>
                                        </TreeViewItem>
                                    </TreeView>
                                </StackPanel>
                            </ScrollViewer>
                            <DockPanel
                                Grid.Row="1"
                                Height="240"
                                VerticalAlignment="Center"
                                HorizontalAlignment="Stretch"
                                Visibility="{Binding Visibility, ElementName=OptionsPanel, Converter={StaticResource ReversedVisibilityConverter}}">
                                <materialDesign:PackIcon
                                    x:Name="NoOptionsAvailableIcon"
                                    DockPanel.Dock="Top"
                                    Kind="TuneVariant"
                                    Margin="0 50 0 0"
                                    HorizontalAlignment="Center"
                                    Width="100"
                                    Height="100"
                                    Opacity="0.4"
                                    Foreground="{StaticResource FunctionalAreaIconBrush}"/>
                                <TextBlock
                                    DockPanel.Dock="Bottom"
                                    Text="当前没有可用的选项"
                                    HorizontalAlignment="Center"
                                    FontSize="25"
                                    Opacity="{Binding Opacity, ElementName=NoOptionsAvailableIcon}"
                                    Foreground="{StaticResource FunctionalAreaIconBrush}"/>
                            </DockPanel>
                        </Grid>
                    </materialDesign:Card>

                    <materialDesign:Card
                        x:Name="TaskExecutionCard"
                        Grid.Row="1"
                        Margin="10 10 20 20">
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="35"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                            </Grid.RowDefinitions>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="2.8*"/>
                                <ColumnDefinition Width="1*" MinWidth="120" MaxWidth="150"/>
                            </Grid.ColumnDefinitions>
                            <TextBlock Grid.Row="0" Grid.Column="0" VerticalAlignment="Bottom" HorizontalAlignment="Left" Margin="15 0" Text="输出设置" FontSize="20"/>
                            <DockPanel Grid.Row="1" Grid.Column="0" Margin="10 0 0 0">
                                <Button
                                    x:Name="BrowseExportFolderButton"
                                    VerticalAlignment="Bottom"
                                    Padding="0"
                                    Margin="5 12 0 7"
                                    Height="40"
                                    Width="40"
                                    Style="{StaticResource MaterialDesignFlatLightBgButton}"
                                    Background="{StaticResource ThemedLowContrastIndigoBrush}"
                                    BorderBrush="{StaticResource ThemedLowContrastIndigoBrush}"
                                    BorderThickness="0.5"
                                    materialDesign:ShadowAssist.ShadowDepth="Depth1"
                                    materialDesign:ButtonAssist.CornerRadius="5"
                                    Content="{materialDesign:PackIcon Folder}"
                                    IsEnabled="{Binding ExecutionInProgress, Converter={StaticResource InvertBooleanConverter}}"
                                    Click="BrowseExportFolderButton_Click"
                                    ToolTip="浏览文件夹"/>
                                <TextBox
                                    VerticalAlignment="Center"
                                    Margin="10 0"
                                    Padding="0 2"
                                    materialDesign:HintAssist.Hint="{Binding ExportPath.IsRelative, Converter={StaticResource BooleanSwitchOperationConverter}, ConverterParameter=输出路径（相对）;输出路径}"
                                    materialDesign:HintAssist.Foreground="{StaticResource ThemedHighContrastIndigoBrush}"
                                    materialDesign:TextFieldAssist.UnderlineBrush="{StaticResource ThemedIndigoBrush}"
                                    Text="{Binding ExportPath.PathValue}"
                                    FontSize="16"
                                    Style="{StaticResource MaterialDesignFloatingHintTextBox}"
                                    CaretBrush="{StaticResource ThemedMaxContrastBrush}"
                                    IsEnabled="{Binding ExecutionInProgress, Converter={StaticResource InvertBooleanConverter}}"
                                    ToolTip="在开头插入“${src}”可指代源路径，例如“${src}/custom/relative/path”"
                                    Cursor="Arrow"
                                    KeyDown="ExportPathTextBox_KeyDown"/>
                            </DockPanel>
                            <WrapPanel Grid.Row="2" Grid.Column="0" Margin="7 0 0 7" Orientation="Horizontal" VerticalAlignment="Stretch">
                                <StackPanel Margin="10 0 10 0" Height="26" Orientation="Horizontal" VerticalAlignment="Center">
                                    <ToggleButton
                                        x:Name="OpenExportFolderToggle"
                                        VerticalAlignment="Center"
                                        Style="{StaticResource MaterialDesignSwitchToggleButton}"
                                        Background="{StaticResource ThemedIndigoBrush}"
                                        Width="40"
                                        Height="20"
                                        Cursor="Hand"
                                        IsChecked="{Binding OpenExportFolder}"/>
                                    <TextBlock x:Name="OpenExportFolderText" VerticalAlignment="Center" Margin="0" Text="完成后打开输出路径" FontSize="14" Opacity="0.8"/>
                                </StackPanel>
                                <StackPanel Margin="10 0 10 0" Height="26" Orientation="Horizontal" VerticalAlignment="Center">
                                    <TextBlock x:Name="OverwriteOptionText" VerticalAlignment="Center" Margin="2 0 2 0" Text="遇到同名文件时" FontSize="14" Opacity="0.8"/>
                                    <ComboBox
                                        x:Name="OverwriteOptionComboBox"
                                        Margin="2.5 4 2.5 0"
                                        VerticalAlignment="Bottom"
                                        Height="22"
                                        Padding="0 0 0 3"
                                        FontSize="14"
                                        materialDesign:TextFieldAssist.UnderlineBrush="{StaticResource ThemedIndigoBrush}"
                                        materialDesign:ComboBoxAssist.ShowSelectedItem="False"
                                        IsEnabled="{Binding ExecutionInProgress, Converter={StaticResource InvertBooleanConverter}}"
                                        SelectedIndex="{Binding OverWriteOption, Converter={StaticResource IndexToEnumValueConverter}, ConverterParameter={x:Type config:OverwriteOptions}}">
                                        <ComboBoxItem IsSelected="True" Content="覆盖"/>
                                        <ComboBoxItem Content="跳过"/>
                                        <ComboBoxItem Content="询问"/>
                                    </ComboBox>
                                </StackPanel>
                            </WrapPanel>
                            <Button
                                x:Name="StartExecutionButton"
                                Grid.Column="1"
                                Grid.Row="1"
                                Grid.RowSpan="2"
                                Width="Auto"
                                Height="60"
                                HorizontalAlignment="Stretch"
                                VerticalAlignment="Bottom"
                                Margin="5 0 15 15"
                                Padding="0"
                                materialDesign:ButtonAssist.CornerRadius="10"
                                Style="{StaticResource MaterialDesignRaisedButton}"
                                materialDesign:ButtonProgressAssist.Value="-1"
                                materialDesign:ButtonProgressAssist.IsIndicatorVisible="True"
                                materialDesign:ButtonProgressAssist.IsIndeterminate="{Binding ExecutionInProgress}"
                                FontSize="20"
                                Content="{Binding ExecutionInProgress, Converter={StaticResource BooleanSwitchOperationConverter}, ConverterParameter=转换中;开始转换}"
                                Click="StartExecutionButton_Click">
                                <Button.IsEnabled>
                                    <MultiBinding Converter="{StaticResource BooleanAllConverter}" Mode="OneWay">
                                        <Binding Path="ExecutionInProgress" Converter="{StaticResource InvertBooleanConverter}" Mode="OneWay"/>
                                        <Binding Path="SelectedInputPlugin" Converter="{StaticResource NotNullConverter}" Mode="OneWay"/>
                                        <Binding Path="SelectedOutputPlugin" Converter="{StaticResource NotNullConverter}" Mode="OneWay"/>
                                        <Binding  Path="HasItems" ElementName="TaskListView" Mode="OneWay"/>
                                    </MultiBinding>
                                </Button.IsEnabled>
                            </Button>
                        </Grid>
                    </materialDesign:Card>
                </Grid>
            </Grid>
        </Grid>
    </materialDesign:DialogHost>
</Window>
